name: 도커 이미지 CI
on:
  push:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: 도커 빌드 & 도커 이미지 push
        if: contains(github.ref, 'main')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

## deploy to production
      - name: EC2 도커 배포 단계
        uses: appleboy/ssh-action@master
        id: deploy
        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.SERVER_IP }} # EC2 퍼블릭 IPv4 DNS
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            sudo docker stop backend-8080
            sudo docker rm backend-8080
            sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/backend:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest
            sudo docker run -d -p 8080:8080 --name backend-spring-8080 ${{ secrets.DOCKER_USERNAME }}/backend:latest
            sudo docker image prune -f